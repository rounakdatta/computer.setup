---
# make sure homebrew is installed, update brew and install applications
- name: setup homebrew
  include: homebrew.yml
  when: ansible_distribution == "MacOSX"

- name: start installing homebrew applications
  homebrew:
    name: "{{ homebrew_applications }}"
    state: latest
    install_options: verbose
  when: ansible_distribution == "MacOSX"

- name: start installing homebrew cask applications
  homebrew_cask:
    name: "{{ homebrew_cask_applications }}"
    state: present
    accept_external_apps: yes
    install_options: verbose
  when: ansible_distribution == "MacOSX"

- name: start downloading and installing external applications (dmg)
  include: dmg.yml
  vars:
    downloadURL: "{{ item.value.url }}"
    appName: "{{ item.value.name }}"
  with_dict: "{{ external_applications_dmg }}"
  when: ansible_distribution == "MacOSX"

- name: start downloading and installing external applications (pkg)
  include: pkg.yml
  vars:
    downloadURL: "{{ item.value.url }}"
    appName: "{{ item.value.name }}"
  with_dict: "{{ external_applications_pkg }}"
  when: ansible_distribution == "MacOSX"

- name: install packages for arch linux
  include: arch.yml
  when: ansible_distribution == "Archlinux"

- name: starting installing pip-managed python packages
  include: pip.yml
  vars:
    appName: "{{ item.value.name }}"
  with_dict: "{{ pip_python_packages }}"

- name: starting installing applications from source
  include: source.yml
